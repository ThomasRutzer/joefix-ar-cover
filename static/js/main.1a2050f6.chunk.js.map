{"version":3,"sources":["config.js","store.js","assets/sounds/song.mp3","assets/sounds/atmo.mp3","hooks/useTimout.js","components/sound/AudioPlayer.js","components/sound/useAppleSafariSoundHack.js","components/sound/index.js","assets/images/tracked-image.png","components/ui/info/media.js","components/ui/externalLink/index.js","components/ui/info/index.js","components/ui/loadingIndicator/index.js","App.js","index.js"],"names":["DELAY_UNTIL_SONG_STARTS","VIEWS","INTRO","SCENE","APP_STATES","PREPARE_PLAY","SHALL_PLAY","PLAY","PLAY_FINISHED","TRACKED_IMAGE_SIZE","width","height","depth","store","create","set","view","appState","arEngineReady","sceneEntered","mute","currentSongDuration","useTimeout","callback","delay","savedCallback","useRef","useEffect","current","id","setTimeout","clearTimeout","AudioPlayer","src","srcType","shallPlay","onPlay","onLoadedMetaData","onEnded","props","audioRef","useState","isPlaying","setIsPlaying","a","play","console","log","tryPlay","pause","ref","onLoadedMetadata","preload","style","display","type","useAppleSafariSoundHack","soundAssets","unlockAudio","map","soundAsset","sound","Audio","currentTime","document","body","removeEventListener","ua","navigator","userAgent","toLowerCase","indexOf","isAppleDevice","addEventListener","Sound","useStore","state","songShallPlay","setSongShallPlay","scheduleSongToPlay","setSchedulerForSongPlay","atmoShallPlay","setAtmoShallPlay","songAsset","atmoSoundAsset","e","setState","Math","round","target","duration","loop","muted","Media","className","alt","trackedImage","ExternalLink","label","link","href","rel","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Info","onStartButton","show","setShow","useTransition","from","opacity","y","enter","leave","config","molasses","onRest","transitions","styles","item","div","onClick","LoadingIndicator","labelTransitions","wrapperTransitions","querySelector","setAttribute","wrapperStyles","wrapper","labelStyes","p","CanvasContainer","lazy","App","fallback","collapsed","hidden","process","reactRoot","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1a2050f6.chunk.js","sourcesContent":["export const DELAY_UNTIL_SONG_STARTS = 3000\n\nexport const VIEWS = {\n  INTRO: \"intro\",\n  SCENE: \"scene\"\n}\n\nexport const APP_STATES = {\n  PREPARE_PLAY: \"preparePlay\",\n  SHALL_PLAY: \"shallPlay\",\n  PLAY: \"play\",\n  PLAY_FINISHED: \"playFinished\"\n}\n\nexport const TRACKED_IMAGE_SIZE = {\n  width: 200,\n  height: 200,\n  depth: 200\n}\n","import create from \"zustand\"\n\nimport { VIEWS } from \"./config\"\n\nconst store = create(set => ({\n  view: VIEWS.INTRO,\n  appState: null,\n  arEngineReady: false,\n  sceneEntered: false,\n  mute: false,\n  currentSongDuration: null\n}))\n\nexport default store","export default __webpack_public_path__ + \"static/media/song.a30f0198.mp3\";","export default __webpack_public_path__ + \"static/media/atmo.5e0eb98a.mp3\";","import { useEffect, useRef } from \"react\"\n\nfunction useTimeout(callback, delay) {\n  const savedCallback = useRef(callback)\n\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  useEffect(() => {\n    if (delay === null) {\n      return\n    }\n\n    const id = setTimeout(() => savedCallback.current(), delay)\n\n    return () => clearTimeout(id)\n  }, [delay])\n}\n\nexport default useTimeout\n","import { useEffect, useRef, useState } from \"react\";\n\nconst AudioPlayer = ({ \n  src, srcType = \"mp3\", shallPlay,\n  onPlay = () => {}, onLoadedMetaData = () => {}, onEnded = () => {},\n  ...props\n}) => {\n  const audioRef = useRef()\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  useEffect(() => {\n    async function tryPlay() {\n      try {\n        await audioRef.current.play()\n        setIsPlaying(true)\n        onPlay()\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (shallPlay && !isPlaying) {\n      tryPlay()\n    } else if(!shallPlay && isPlaying) {\n      audioRef.current.pause()\n      setIsPlaying(false)\n    }\n  }, [shallPlay, onPlay, isPlaying])\n\n  return (\n    <audio\n      ref={audioRef}\n      onEnded={onEnded}\n      onLoadedMetadata={onLoadedMetaData}\n      preload=\"auto\"\n      {...props}\n      style={{ display: \"none\" }}>\n      <source\n        src={src}\n        type={`audio/${srcType}`} />\n    </audio>\n  )\n}\n\nexport default AudioPlayer","import { useEffect } from \"react\"\n\nconst useAppleSafariSoundHack = soundAssets => {\n  function unlockAudio() {\n    soundAssets.map(soundAsset => {\n      console.log(soundAsset);\n      const sound = new Audio(soundAsset)\n\n      sound.play()\n      sound.pause()\n      sound.currentTime = 0\n\n      return null\n    })\n\n    document.body.removeEventListener(\"click\", unlockAudio)\n    document.body.removeEventListener(\"touchstart\", unlockAudio)\n  }\n\n  function isAppleDevice() {\n    const ua = navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') !== -1 && !ua.indexOf('chrome') > -1\n  }\n\n  useEffect(() => {\n    if (isAppleDevice()) {\n      document.body.addEventListener(\"click\", unlockAudio)\n      document.body.addEventListener(\"touchstart\", unlockAudio)\n    }\n  }, [])\n}\n\nexport default useAppleSafariSoundHack","import { useEffect, useState } from \"react\"\n\nimport songAsset from \"./../../assets/sounds/song.mp3\"\nimport atmoSoundAsset from \"./../../assets/sounds/atmo.mp3\"\nimport useStore from \"../../store\"\nimport { APP_STATES, DELAY_UNTIL_SONG_STARTS } from \"../../config\"\nimport useTimeout from \"../../hooks/useTimout\"\nimport AudioPlayer from \"./AudioPlayer\"\nimport useAppleSafariSoundHack from \"./useAppleSafariSoundHack\"\nconst Sound = () => {\n  const appState = useStore(state => state.appState)\n  const mute = useStore(state => state.mute)\n  const [songShallPlay, setSongShallPlay] = useState(null)\n  const [scheduleSongToPlay, setSchedulerForSongPlay] = useState(null)\n  const [atmoShallPlay, setAtmoShallPlay] = useState(null)\n\n  useAppleSafariSoundHack([songAsset, atmoSoundAsset])\n\n\n  useTimeout(() => setSongShallPlay(true), scheduleSongToPlay ? DELAY_UNTIL_SONG_STARTS : null)\n\n  useEffect(() => {\n    switch (appState) {\n      case APP_STATES.SHALL_PLAY:\n        setAtmoShallPlay(true)\n        setSchedulerForSongPlay(true)\n        return\n      case APP_STATES.PLAY_FINISHED:\n        setAtmoShallPlay(false)\n        setSongShallPlay(false)\n        setSchedulerForSongPlay(false)\n        return\n      default:\n        return null\n    }\n  }, [appState])\n\n  return (\n    <>\n      <AudioPlayer\n        onLoadedMetaData={\n          e => useStore.setState({ currentSongDuration: Math.round(e.target.duration * 1000) })\n        }\n        onEnded={() => useStore.setState({ appState: APP_STATES.PLAY_FINISHED })}\n        shallPlay={songShallPlay}\n        src={songAsset}\n        loop={false}\n        muted={mute}\n      />\n      <AudioPlayer\n        onPlay={() => useStore.setState({ appState: APP_STATES.PLAY })}\n        src={atmoSoundAsset}\n        shallPlay={atmoShallPlay}\n        loop={true}\n        muted={mute}\n      />\n    </>\n  )\n}\n\nexport default Sound","export default __webpack_public_path__ + \"static/media/tracked-image.2c278093.png\";","import React from \"react\"\n\nimport trackedImage from \"./../../../assets/images/tracked-image.png\"\nimport \"./media.css\"\n\nconst Media = () => {\n  return (\n    <div className=\"media\">\n      <img\n        alt=\"Cover of Joe Fix – of ties & knives EP\"\n        src={trackedImage} />\n      <div>\n        <h2 className=\"media__subtitle\">Listen to</h2>\n        <h1 className=\"media__title\">\n          Joe Fix – of ties <br /> & knives\n        </h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Media","import React from \"react\"\n\nimport \"./index.css\"\n\nconst ExternalLink = ({ label, link }) => (\n  <a\n    className=\"external-link\"\n    href={link}\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    {label}\n    <svg\n      className=\"external-link__icon\"\n      aria-hidden=\"true\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"#000000\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n      strokeLinejoin=\"arcs\"\n    >\n      <path d=\"M7 17l9.2-9.2M17 17V7H7\" />\n    </svg>\n  </a>\n)\n\nexport default ExternalLink\n","import React, { useState } from \"react\"\nimport { useTransition, animated, config } from \"@react-spring/web\"\n\nimport \"./index.css\"\nimport Media from \"./media\"\nimport ExternalLink from \"./../externalLink\"\n\nconst Info = ({ onStartButton }) => {\n  const [show, setShow] = useState(true)\n\n  const transitions = useTransition(show, {\n    from: { opacity: 0, y: 300 },\n    enter: { opacity: 1, y: 0 },\n    leave: { opacity: 0, y: 300 },\n    delay: show ? 1000 : 0,\n    config: config.molasses,\n    onRest: () => {\n      if (!show) {\n        onStartButton()\n      }\n    }\n  })\n\n  return (\n    transitions(\n      (styles, item) => item &&\n        <animated.div className=\"info\" style={styles}>\n          <div className=\"info__content\">\n            <Media />\n            <div className=\"info__explanation\">\n              <p className=\"info__copy\">\n                Welcome to the JOE FIX AR Radio. It's experimental, sometimes doesn't work and it's gonna be loud & fix.\n                But you'll be just fine, no worries!\n              </p>\n              <button className=\"info__cta\" onClick={() => setShow(false)}>Show me!</button>\n              <div className=\"info__link-list-wrapper\">\n                <ul>\n                  <li>\n                    <ExternalLink label=\"turntable model\" link=\"https://market.pmnd.rs/model/turntable\"></ExternalLink>\n                  </li>\n                  <li>\n                    <ExternalLink label=\"vinyl model\" link=\"https://www.turbosquid.com/3d-models/disc-vinyl-3d-model-1608654\"></ExternalLink>\n                  </li>\n                </ul>\n                <ul>\n                  <li>\n                    <ExternalLink label=\"listen on Bandcamp\" link=\"https://joefix1.bandcamp.com/releases\"></ExternalLink>\n                  </li>\n                  <li>\n                    <ExternalLink label=\"made by Thomas Rutzer\" link=\"https://thomasrutzer.dev/legal\"></ExternalLink>\n                  </li>\n                </ul>\n              </div>\n\n            </div>\n          </div>\n        </animated.div>\n    )\n  )\n}\n\nexport default Info","import { useTransition, animated, config } from \"@react-spring/web\"\nimport useTimeout from \"../../../hooks/useTimout\"\n\nimport { VIEWS } from \"../../../config\"\nimport useStore from \"./../../../store\"\nimport \"./index.css\"\n\nconst LoadingIndicator = () => {\n  const view = useStore(state => state.view)\n  const arEngineReady = useStore(state => state.arEngineReady)\n\n  const labelTransitions = useTransition(view !== VIEWS.INTRO, {\n    from: { opacity: 0, y: 30 },\n    enter: { opacity: 1, y: 0 },\n    delay: 300,\n    config: config.molasses\n  })\n\n  const wrapperTransitions = useTransition(!arEngineReady, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    config: config.molasses\n  })\n\n  useTimeout(() => {\n    document.querySelector(\"meta[name='theme-color']\").setAttribute(\"content\", \"#e2192c\");\n  }, 90000)\n\n  return (\n    <>\n      {wrapperTransitions(\n        (wrapperStyles, wrapper) => wrapper &&\n          <animated.div className=\"loading-indicator\" style={wrapperStyles}>\n            {labelTransitions(\n              (labelStyes, label) => label &&\n                <animated.p className=\"loading-indicator__label\" style={labelStyes}>Pump up the volume…</animated.p>\n            )}\n            <div className=\"loading-indicator__logo\" />\n            <span className=\"loading-indicator__drop\"></span>\n            <span className=\"loading-indicator__drop loading-indicator__drop--delay-300 loading-indicator__drop--small\"></span>\n            <span className=\"loading-indicator__fill\"></span>\n          </animated.div>\n      )}\n    </>\n  )\n}\n\nexport default LoadingIndicator","import React, { lazy, Suspense } from \"react\"\nimport { Leva } from \"leva\"\n\nimport useStore from \"./store\"\nimport { VIEWS } from \"./config\"\nimport Sound from \"./components/sound\"\nimport Info from \"./components/ui/info\"\nimport LoadingIndicator from \"./components/ui/loadingIndicator\"\nconst CanvasContainer = lazy(() => import(\"./components/gl/canvasContainer\"))\n\nconst App = () => {\n\n  return (\n    <>\n\n      <LoadingIndicator />\n\n      <Info onStartButton={() => useStore.setState({ view: VIEWS.SCENE })} />\n      <>\n        <Suspense fallback={<LoadingIndicator />}>\n          <CanvasContainer />\n        </Suspense>\n      </>\n\n      <Sound />\n      <Leva\n        collapsed\n        hidden={process.env.NODE_ENV === \"production\"}\n      />\n    </>\n  )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./style.css\"\nimport App from \"./App\"\n\nconst reactRoot = document.getElementById(\"root\")\nReactDOM.render(<App />, reactRoot)\n"],"sourceRoot":""}